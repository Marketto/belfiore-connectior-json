/**
 * @marketto/belfiore-connector-json 1.1.0
 * Copyright (c) 2019-2024, Marco Ricupero <marco.ricupero@gmail.com>
 * License: MIT
 * ============================================================
 * CITIES_COUNTRIES uses material from the following authors:
 * Agenzia delle Entrate             -   License: CC-BY 4.0
 * Istituto nazionale di Statistica  -   License: CC-BY 3.0
 * Ministero dell'Interno            -   License: CC-BY 4.0
 */

import e from"dayjs";import{BelfioreAbstractConnector as t}from"@marketto/belfiore-connector";class i extends t{placesRetrieverFn;placesCache;placeExpirationDateTime;lifeTimeSec;toDate;fromDate;codeMatcher;province;filterByParams(t,i){let a=[...t];if(i?.codeMatcher&&(a=a.filter((({belfioreCode:e})=>i?.codeMatcher?.test(e)))),i?.province){const e=i?.province?.toUpperCase();a=a.filter((({province:t})=>e===t?.toUpperCase()))}return i?.fromDate&&(a=a.filter((({creationDate:t})=>!t||!e(i.fromDate).isBefore(t,"day")))),i?.toDate&&(a=a.filter((({expirationDate:t})=>!t||!e(i.toDate).isBefore(t,"day")))),a}async getPlaces(){if("function"==typeof this.placesRetrieverFn&&(this.placeExpirationDateTime instanceof Date&&(new Date).getTime()-this.placeExpirationDateTime.getTime()>=0||!this.placesCache)){const t=await this.placesRetrieverFn();"number"!=typeof this.lifeTimeSec||isNaN(this.lifeTimeSec)||(this.placeExpirationDateTime=e().add(this.lifeTimeSec,"seconds").toDate());const i=this.filterByParams(t,{codeMatcher:this.codeMatcher,province:this.province,fromDate:this.fromDate,toDate:this.toDate});this.placesCache=Object.freeze(i)}return[...this.placesCache||[]]}async parseProvinces(){const e=await this.getPlaces();return[...new Set(e.map((({province:e})=>e)))].sort().filter(Boolean)}constructor(e,t){if(super(),t?.codeMatcher&&t?.province)throw new Error("Both codeMatcher and province were provided to Bolfiore, only one is allowed");if(t?.toDate&&!t?.fromDate)throw new Error("Parameter fromDate is mandatory passing toDate");let i;if("function"==typeof e)this.placesRetrieverFn=e,this.lifeTimeSec=t?.lifeTimeSec;else if(Array.isArray(e))i=e;else{if("object"!=typeof e||!e.placesRetrieverFn&&!e.placesCache)throw new Error("Invalid initialized, retriver functio, array of places or BelfioreConnector instance needed as first parameter");this.placesRetrieverFn=e.placesRetrieverFn,i=e.placesCache,this.placeExpirationDateTime=e.placeExpirationDateTime,this.lifeTimeSec=e.lifeTimeSec,this.toDate=e.toDate,this.fromDate=e.fromDate,this.codeMatcher=e.codeMatcher,this.province=e.province}if(this.fromDate=this.fromDate||t?.fromDate,this.toDate=this.toDate||t?.toDate,this.codeMatcher=this.codeMatcher||t?.codeMatcher,this.province=this.province||t?.province,i){const e=this.filterByParams([...i],{codeMatcher:this.codeMatcher,province:this.province,fromDate:this.fromDate,toDate:this.toDate});this.placesCache=Object.freeze(e)}}async toArray(){return(await this.getPlaces()).map((e=>({...e})))}get provinces(){return new Promise((e=>{this.province?e([this.province]):this.codeMatcher!==this.COUNTRY_CODE_MATCHER?this.parseProvinces().then(e):e([])}))}async searchByName(e){if(!e||"string"!=typeof e)return null;const t=new RegExp(e,"i");return(await this.getPlaces()).filter((e=>t.test(e.name)))}async findByName(e){if(!e||"string"!=typeof e)return null;const t=new RegExp(`^${e}$`,"i");return(await this.getPlaces()).find((e=>t.test(e.name)))||null}async findByCode(e){if(!this.BELFIORE_CODE_MATCHER.test(e))return null;const t=e.toUpperCase();return(await this.getPlaces()).find((e=>t===e?.belfioreCode?.toUpperCase()))||null}active=(t=new Date)=>new i({placesRetrieverFn:this.placesRetrieverFn,placesCache:this.placesCache,placeExpirationDateTime:this.placeExpirationDateTime,lifeTimeSec:this.lifeTimeSec,codeMatcher:this.codeMatcher,province:this.province,fromDate:Array.isArray(t)?new Date(t[0],t[1]??0,t[2]??1):e(t).toDate(),toDate:Array.isArray(t)?new Date(t[0],t[1]??0,t[2]??1):e(t).toDate()});from=(t=new Date)=>new i({placesRetrieverFn:this.placesRetrieverFn,placesCache:this.placesCache,placeExpirationDateTime:this.placeExpirationDateTime,lifeTimeSec:this.lifeTimeSec,codeMatcher:this.codeMatcher,province:this.province,fromDate:Array.isArray(t)?new Date(t[0],t[1]??0,t[2]??1):e(t).toDate(),toDate:this.toDate});byProvince=e=>{if("string"==typeof e&&/^[A-Z]{2}$/u.test(e))return new i({placesRetrieverFn:this.placesRetrieverFn,placesCache:this.placesCache,placeExpirationDateTime:this.placeExpirationDateTime,lifeTimeSec:this.lifeTimeSec,codeMatcher:void 0,province:e,fromDate:this.fromDate,toDate:this.toDate})};get cities(){if(!this.codeMatcher||this.codeMatcher===this.CITY_CODE_MATCHER)return new i({placesRetrieverFn:this.placesRetrieverFn,placesCache:this.placesCache,placeExpirationDateTime:this.placeExpirationDateTime,lifeTimeSec:this.lifeTimeSec,codeMatcher:this.CITY_CODE_MATCHER,province:void 0,fromDate:this.fromDate,toDate:this.toDate})}get countries(){if(!(this.codeMatcher&&this.codeMatcher!==this.COUNTRY_CODE_MATCHER||this.province))return new i({placesRetrieverFn:this.placesRetrieverFn,placesCache:this.placesCache,placeExpirationDateTime:this.placeExpirationDateTime,lifeTimeSec:this.lifeTimeSec,codeMatcher:this.COUNTRY_CODE_MATCHER,province:void 0,fromDate:this.fromDate,toDate:this.toDate})}}export{i as BelfioreConnector,i as default};
//# sourceMappingURL=index.mjs.map
